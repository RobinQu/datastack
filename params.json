{"name":"Datastack","tagline":"Drop-in RESTful middlewares for koa","body":"# DataStack\r\n\r\n[![Build Status](https://travis-ci.org/RobinQu/datastack.svg?branch=master)](https://travis-ci.org/RobinQu/datastack)\r\n\r\nHuman-friendly RESTful middlewares for koa\r\n\r\n## TL;DR\r\n\r\nBuilding your API like a pro:\r\n\r\n\r\n    var datastack = require(\"datastack\"),\r\n        koa = require(\"koa\");\r\n\r\n    var app = koa();\r\n    datastack(app, {\r\n      storage: {\r\n        type: \"mongodb\",\r\n        uri: \"mongodb://127.0.0.1:27017/zoo\"\r\n      }\r\n    });\r\n    app.resource(\"cats\");\r\n    app.resource(\"dogs\");\r\n    app.listen(porcess.env.PORT || 8888);\r\n\r\n\r\nAnd you can now have fully operational RESTful API (and more) against two different `collection`s.\r\n\r\n\r\n## Philosophy\r\n\r\nFundalmentally `datastack` is a web middleware that is powered by `koa` and its friends. It targets to help you to quickly build up your RESTful API with minimun code. To understand what `datastack` really is, please read on the following topics:\r\n\r\n* [Data model and data storage](/doc/data_model_and_storage.md)\r\n* [API exposed by built-in components](/doc/builtin_api.md)\r\n* [Design patterns](/doc/patterns.md)\r\n* [Plugin system](/doc/plugin.md)\r\n* [Working with cluster](/doc/cluster.md)\r\n* [Authentication](/doc/auth.md)\r\n\r\n## Roadmap\r\n\r\n* √ [Alpha](https://github.com/RobinQu/datastack/issues?milestone=1&state=open) \r\n* √ [Beta](https://github.com/RobinQu/datastack/issues?milestone=2&state=open)\r\n* ♨︎ [Theta](https://github.com/RobinQu/datastack/issues?milestone=3&state=open) July 27, 2014\r\n* ♨︎ [Delta](https://github.com/RobinQu/datastack/issues?milestone=4&state=open) Aug 10, 2014\r\n\r\n## License\r\n\r\nMIT","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}